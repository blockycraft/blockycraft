name: Blockycraft

on:
  pull_request:
    paths:
      - blockycraft/*
      - blockycraft/*/*
      - blockycraft/*/*/*
      - blockycraft/*/*/*/*
      - .github/workflows/main.yml
  push:
    branches:
      - master
    tags:
      - "*"

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE_2019_4_3F1 }}

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2019.4.3f1
        targetPlatform:
          - StandaloneOSX
          - StandaloneWindows
          - StandaloneWindows64
          - StandaloneLinux64
          - WebGL
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - uses: actions/cache@v1.1.0
        with:
          path: blockycraft/Library
          key: blockycraft/Library

      - name: Build project
        uses: webbertakken/unity-builder@v1.0
        with:
          projectPath: blockycraft/.
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: blockycraft

      - name: Run tests
        uses: webbertakken/unity-test-runner@v1.6
        if: matrix.targetPlatform == 'WebGL'
        with:
          unityVersion: ${{ matrix.unityVersion }}
          projectPath: ./blockycraft/.

      - name: Upload tests
        uses: actions/upload-artifact@v1
        if: matrix.targetPlatform == 'WebGL'
        with:
          name: test-results
          path: artifacts

      - name: Upload to artifacts
        uses: actions/upload-artifact@v1
        with:
          name: build-${{ matrix.targetPlatform }}-${{ matrix.unityVersion }}
          path: build/${{ matrix.targetPlatform }}/

  ghpages:
    if: github.ref == 'refs/heads/master'
    name: Deploy to GitHub Pages
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Download WebGL build
        uses: actions/download-artifact@v2
        with:
          name: build-WebGL-2019.4.3f1
          path: artifacts

      - name: Prepare WebGL player
        run: |
          mv artifacts/blockycraft docs/play
          ls docs/play

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: docs/

  release:
      name: Create Github Release
      if: contains(github.ref, 'tags/')
      needs: [build]
      runs-on: ubuntu-latest
      steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt

      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  publish:
    if: contains(github.ref, 'tags/')
    needs: [build, release]
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2019.4.3f1
        targetPlatform:
          - StandaloneOSX
          - StandaloneWindows
          - StandaloneWindows64
          - StandaloneLinux64
          - WebGL
    runs-on: ubuntu-latest
    steps:
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: build-${{ matrix.targetPlatform }}-${{ matrix.unityVersion }}
        path: artifacts

    - name: Package artifact for release
      run: |
        zip -r ../${{ matrix.targetPlatform }}.zip .* *
      working-directory: artifacts

    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        echo ::set-output name=file_name::${REPOSITORY_NAME##*/}-${TAG_REF_NAME##*/v}
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
      env:
        TAG_REF_NAME: ${{ github.ref }}
        REPOSITORY_NAME: ${{ github.repository }}

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./${{ matrix.targetPlatform }}.zip
        asset_name: ${{ steps.get_release_info.outputs.file_name }}-${{ matrix.targetPlatform }}.zip
        asset_content_type: application/zip
